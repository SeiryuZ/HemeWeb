
- hosts: localhost
  connection: local
  gather_facts: false
  vars:
    - region: eu-west-1
    - worker_node_count: 1
    #- worker_instance_type: m4.xlarge
    - worker_instance_type: t2.micro
    - image: ami-f95ef58a


  tasks:

    - name: Provision worker nodes
      ec2:
        region: "{{ region }}"
        image: "{{ image }}"
        instance_type: "{{ worker_instance_type }}"
        key_name: hemeweb
        groups:
          - default
          - ssh
        wait: true
        count_tag:
          name: "{{ instance_tags }}"
        exact_count: "{{ worker_node_count }}"
        instance_tags:
          name: "{{ instance_tags }}"
      register: ec2

    - name: Debug
      debug: var={{ item }}
      with_items: '{{ ec2.instances }}'

    - name: Register all ec2 instances created to a group
      add_host: hostname={{ item.public_ip }} groups=worker_nodes
      with_items: '{{ ec2.instances }}'

    - name: Waiting for all nodes to come back
      local_action: wait_for host={{ item.public_ip }} port=22 state=started timeout=300
      with_items: '{{ ec2.instances }}'
      become: false



- hosts: worker_nodes
  name: Re-configure worker nodes
  become: true
  tasks:

    - name: Mount NFS for shared volume
      mount: name=/shared src={{ master_ip }}:/shared fstype=nfs state=mounted
      ignore_errors: true


    - name: Configure docker daemon options
      template: src=docker.conf.j2 dest=/etc/default/docker

    - name: Restart docker
      service: name=docker state=restarted


    - name: Validate and create hemelb-overlay network if does not exist
      command: docker network create -d overlay hemelb-overlay
      ignore_errors: true

    - name: Run hemelb containers
      command: docker run -d --net=hemelb-overlay  -v /shared:/shared seiryuz/hemelb-core:0.0.2
      register: container_instance_id

    - name: Get the container ip
      command:  docker inspect --format="{% raw %}{{range .NetworkSettings.Networks}}{{.IPAddress}}{{end}}{% endraw %}" {{container_instance_id.stdout}}
      register: container_ip


- hosts: worker_nodes[0]
  name: Run HemeLB job
  become: true
  tasks:

    - name: Set fact
      set_fact:
        container_ips: "{% for host in groups['worker_nodes'] %}{{ hostvars[host]['container_ip']['stdout'] }} {% endfor %}"

    - pause: seconds=3

    - name: Run HemeLB job
      shell: docker exec {{ container_instance_id.stdout }} mpirun.openmpi --mca btl_tcp_if_include eth0  -np 8  --host {{ container_ips | trim | replace(' ', ',') }} hemelb -in {{ input }} -out {{ output }} 1> /shared/log 2>&1
      ignore_errors: true



- hosts: localhost
  name: Terminate worker nodes
  connection: local
  gather_facts: false
  vars:
    - region: eu-west-1
  tasks:
    - name: Terminate instances that were previously launched
      ec2:
        region: "{{ region }}"
        state: 'absent'
        instance_ids: '{{ ec2.instance_ids }}'
