######################################################
# Configure APT, install packages and upgrade all packages
######################################################

---

- name: Configure apt repository
  apt_repository: repo={{ item.name }} state=present
  with_items:
    - name: "deb http://us.archive.ubuntu.com/ubuntu/ trusty universe"
    - name: "deb http://us.archive.ubuntu.com/ubuntu/ trusty multiverse"

- name: Add docker keyserver to apt
  command: apt-key adv --keyserver hkp://p80.pool.sks-keyservers.net:80 --recv-keys 58118E89F3A912897C070ADBF76221572C52609D

- name: Add docker repository to apt
  shell: sh -c "echo 'deb https://apt.dockerproject.org/repo ubuntu-$(lsb_release -sc) main' | cat > /etc/apt/sources.list.d/docker.list"

- name: Update apt cache
  apt: update_cache=yes


######################################################
# Update kernel and restart if necessary
######################################################
- name: Update kernel
  apt: name=linux-image-generic-lts-vivid
  register: kernel_install

- name: Restart all nodes
  shell: sleep 2 && shutdown -r now "Ansible updates triggered"
  async: 1
  poll: 0
  ignore_errors: true
  when: kernel_install.changed

- name: Waiting for all nodes to come back
  local_action: wait_for host={{ inventory_hostname }} port=22 state=started delay=5 timeout=300
  become: false
  when: kernel_install.changed


######################################################
# Install softwares
######################################################
- name: Install needed software
  apt: name={{ item.name }} state=latest
  with_items:
    - name: python
    - name: openmpi-bin
    - name: docker-engine
    - name: libffi-dev

- name: Upgrade packages
  apt: upgrade=yes


